name: "Push Transforms"

env:
  CLI_VERSION: 2.1.8

on:
  push:
    branches:
      - dev
    paths:
      - "transform_files/**"

jobs:
  push_transforms:
    name: Push Transforms
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: 'true'

      - name: Set Environment Variables based on branch
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Setting environment for main branch"
            echo "SAIL_CLIENT_ID=${{ secrets.PROD_TENANT_CLIENT_ID }}" >> $GITHUB_ENV
            echo "SAIL_CLIENT_SECRET=${{ secrets.PROD_TENANT_CLIENT_SECRET }}" >> $GITHUB_ENV
            echo "SAIL_BASE_URL=${{ secrets.PROD_TENANT_BASE_URL }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "SAIL_CLIENT_ID=${{ secrets.DEV_TENANT_CLIENT_ID }}" >> $GITHUB_ENV
            echo "SAIL_CLIENT_SECRET=${{ secrets.DEV_TENANT_CLIENT_SECRET }}" >> $GITHUB_ENV
            echo "SAIL_BASE_URL=${{ secrets.DEV_TENANT_BASE_URL }}" >> $GITHUB_ENV
          fi

      - name: Download sailpoint-cli package
        run: |
          wget https://github.com/sailpoint-oss/sailpoint-cli/releases/download/${{ env.CLI_VERSION }}/sail_${{ env.CLI_VERSION }}_linux_amd64.deb
  
      - name: Install sailpoint-cli
        run: |
          sudo dpkg -i sail_${{ env.CLI_VERSION }}_linux_amd64.deb
          rm sail_${{ env.CLI_VERSION }}_linux_amd64.deb



      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'json'
          
      - name: Add New Transforms
        id: addNewTransforms
        run: |
          readarray -t added_transforms <<<"$(jq -r '.[]' <<<'${{ steps.files.outputs.added }}')"
          for added_file in ${added_transforms[@]}; do
            if [[ $added_file == transform_files/* ]]; then
                echo "Do something with this ${added_file}."

                sail transform create -f ${added_file}
            else
              echo "Skipping ${added_file}, not under transform_files/."
            fi          
          done

      - name: Update Transforms
        run: |
          readarray -t modified_transforms <<<"$(jq -r '.[]' <<<'${{ steps.files.outputs.modified }}')"
          for modified_file in ${modified_transforms[@]}; do
            if [[ $modified_file == transform_files/* ]]; then
                echo "Do something with this ${modified_file}."
            else
              echo "Skipping ${modified_file}, not under transform_files/."
            fi    
          done
    
      - name: Sync Transforms
        run: |
          sail transform download    
    
      - name: Commit changes and create new version tag
        if: steps.addNewTransforms.outcome == 'success'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Sync transforms
          commit_user_name: tyler-mairose-sp
          commit_user_email: tyler.mairose@sailpoint.com